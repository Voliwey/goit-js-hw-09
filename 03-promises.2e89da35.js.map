{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAsD/BC,iBAAiB,UApDxB,SAAoBC,GAChBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,cAAcC,MAAMC,OACzC,MAAMC,EAAOJ,OAAOH,EAAEI,cAAcG,KAAKD,OACnCE,EAASL,OAAOH,EAAEI,cAAcI,OAAOF,OAE7C,SAASG,EAAcC,EAAUL,GAc7B,OAbgB,IAAIM,SAAQ,CAACC,EAASC,KAElC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACHH,EACAF,EAAQ,C,SAAEF,E,MAAUL,IAEpBQ,EAAO,C,SAAEH,E,MAAUL,GAAQ,GAEhCA,EAAM,G,CAOjB,IAAK,IAAIa,EAAW,EAAGA,GAAYV,EAAQU,GAAY,EACnDT,EAAcS,EAAUhB,GACnBiB,MAAK,EAACT,SAAEA,EAAQL,MAAEA,MACfe,EAAAzB,GAAS0B,OAAOC,QACZ,uBAAqBZ,QAAiBL,MAAW,CAE7CkB,SAAU,OACVC,MAAO,QACPC,SAAS,GAEhB,IAEJC,OAAM,EAAChB,SAAEA,EAAQL,MAAEA,MAChBe,EAAAzB,GAAS0B,OAAOM,QACZ,sBAAoBjB,QAAiBL,MAAW,CAE5CkB,SAAU,OACVC,MAAO,QACPC,SAAS,GAEhB,IAGTvB,GAASK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nfunction formSubmit(e) {\n    e.preventDefault();\n\n    let delay = Number(e.currentTarget.delay.value);\n    const step = Number(e.currentTarget.step.value);\n    const amount = Number(e.currentTarget.amount.value);\n\n    function createPromise(position, delay) {\n        const promise = new Promise((resolve, reject) => {\n\n            const shouldResolve = Math.random() > 0.3;\n\n            setTimeout(() => {\n                if (shouldResolve) {\n                    resolve({ position, delay });\n                } else {\n                    reject({ position, delay });\n                }\n            }, delay);\n        });\n\n        return promise;\n    }\n\n\n    for (let position = 1; position <= amount; position += 1) {\n        createPromise(position, delay)\n            .then(({ position, delay }) => {\n                Notiflix.Notify.success(\n                    `✅ Fulfilled promise ${position} in ${delay}ms`,\n                    {\n                        fontSize: '16px',\n                        width: '350px',\n                        useIcon: false,\n                    }\n                );\n            })\n            .catch(({ position, delay }) => {\n                Notiflix.Notify.failure(\n                    `❌ Rejected promise ${position} in ${delay}ms`,\n                    {\n                        fontSize: '16px',\n                        width: '350px',\n                        useIcon: false,\n                    }\n                );\n            });\n\n        delay += step;\n    }\n}\n\nformEl.addEventListener('submit', formSubmit);\n\n\n\n// for (let position = 1; position <= amount; position += 1) {\n//     createPromise(position, delay)\n//         .then(({ position, delay }) => {\n//             alert(`✅ Fulfilled promise ${position} in ${delay}ms`)\n//         })\n//         .catch(({ position, delay }) => {\n//             alert(`❌ Rejected promise ${position} in ${delay}ms`)\n//         });\n\n//     delay += step;\n// }"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","delay","value","step","amount","createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position1","then","$parcel$interopDefault","Notify","success","fontSize","width","useIcon","catch","failure"],"version":3,"file":"03-promises.2e89da35.js.map"}